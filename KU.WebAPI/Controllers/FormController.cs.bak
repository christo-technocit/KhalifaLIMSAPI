using System;
using System.Collections.Generic;
//using System.IO;
using System.Linq;
using System.Threading.Tasks;
using KU.Services.Interfaces;
//using Microsoft.AspNetCore.Hosting;
//using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;


namespace KU.WebAPI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class FormController : ControllerBase
    {
        private readonly IFormService formService;
        readonly ILogger logger;

        public FormController(IFormService formService, ILogger<FormController> logger)
        {
            this.formService = formService;
            this.logger = logger;
        }

        //// GET: api/forms
        //[HttpGet("forms")]
        ////[Authorize(Authorization.Policies.ViewAllCustomersPolicy)]
        //public IActionResult Get()
        //{
        //    var all = formService.GetAllSavedForms();
        //    return Ok(all);
        //   // var selectedform = formService.GetSavedFormByID(5,1234);
        //   // return Ok(selectedform);


        //}



        [HttpGet("listforms")]
        public IActionResult Get([FromQuery]Int32 TemplateID, Int32 SavedFormID, Int32 orderby, Int32 sortorder, Int32 pagesize, Int32 pagenumber, string filter)
        {
            var all = formService.GetSavedFormByID(TemplateID, SavedFormID, orderby, sortorder, pagesize, pagenumber, filter);

            return Ok(all);
        }

        [HttpGet("formattributevalues")]
        public IActionResult Get([FromQuery] Int32 SavedFormID)
        {
            var all = formService.GetFormByID(SavedFormID);

            return Ok(all);
        }

        //[HttpGet("formattribute")]
        //public IActionResult Get([FromQuery]Int32 TemplateID, Int32 FormAttributeid)
        //{
        //    var all = formService.GetAttributeName(TemplateID, FormAttributeid);

        //    return Ok(all);
        //}
        [HttpGet("formattribute")]
        public IActionResult GetAttributeID([FromQuery]Int32 TemplateID, Int32 SectionID, string AttributeName)
        {
            var all = formService.GetAttributeID(TemplateID, SectionID, AttributeName);

            return Ok(all);
        }


        [HttpGet("Questionnaire")]
        public IActionResult GetSampleIDAll([FromQuery] Int32 SavedformID, Int32 TemplateID)
        {

            if (TemplateID == 1) { var all1 = formService.GetSampleID1(SavedformID);  return Ok(all1);   }
            if (TemplateID == 2) { var all2 = formService.GetSampleID2(SavedformID);  return Ok(all2);   }
            if (TemplateID == 4) { var all3 = formService.GetSampleID3(SavedformID); return Ok(all3); }
            if (TemplateID == 5) { var all4 = formService.GetSampleID4(SavedformID); return Ok(all4); }
            if (TemplateID == 6) { var all5 = formService.GetSampleID5(SavedformID); return Ok(all5); }
            if (TemplateID == 7) { var all6 = formService.GetSampleID6(SavedformID); return Ok(all6); }
            if (TemplateID == 8) { var all7 = formService.GetSampleID7(SavedformID); return Ok(all7); }
            if (TemplateID == 9) { var all8 = formService.GetSampleID8(SavedformID); return Ok(all8); }

            var all = formService.GetSampleID1(SavedformID);
            return Ok(all);

        }

        [HttpGet("Questionnaire1")]
        public IActionResult GetbySampleID1([FromQuery] Int32 SavedformID)
        {
            var all = formService.GetSampleID1(SavedformID);

            return Ok(all);
        }

        //[HttpGet("Questionnaire2")]
        //public IActionResult GetbySampleID2([FromQuery] Int32 SavedformID)
        //{
        //    var all = formService.GetSampleID2(SavedformID);

        //    return Ok(all);
        //}
        //[HttpGet("Questionnaire2section")]
    
        [HttpGet("Questionnaire3")]
        public IActionResult GetbySampleID3([FromQuery] Int32 SavedformID)
        {
            var all = formService.GetSampleID3(SavedformID);

            return Ok(all);
        }

  //[HttpGet("Questionnaire4")]
  //      public IActionResult GetbySampleID4([FromQuery] Int32 SavedformID)
  //      {
  //          var all = formService.GetSampleID4(SavedformID);

  //          return Ok(all);
  //      }


  //      [HttpGet("Questionnaire5")]
  //      public IActionResult GetbySampleID5([FromQuery] Int32 SavedformID)
  //      {
  //          var all = formService.GetSampleID5(SavedformID);

  //          return Ok(all);
  //      }


  //      [HttpGet("Questionnaire6")]
  //      public IActionResult GetbySampleID6([FromQuery] Int32 SavedformID)
  //      {
  //          var all = formService.GetSampleID6(SavedformID);

  //          return Ok(all);
  //      }

  //      [HttpGet("Questionnaire7")]
  //      public IActionResult GetbySampleID7([FromQuery] Int32 SavedformID)
  //      {
  //          var all = formService.GetSampleID7(SavedformID);

  //          return Ok(all);
  //      }

  //      [HttpGet("Questionnaire8")]
  //      public IActionResult GetbySampleID8([FromQuery] Int32 SavedformID)
  //      {
  //          var all = formService.GetSampleID8(SavedformID);

  //          return Ok(all);
  //      }

        // GET: api/forms
        [HttpPost("AddForms")]
        //[Authorize(Authorization.Policies.ViewAllCustomersPolicy)]
        public IActionResult AddSavedForm(SavedFormViewModel model)
        {
            var id = formService.InsertSavedForm(model);
            return Ok(id);
        }

        [HttpPost("UpdateForms")]
        //[Authorize(Authorization.Policies.ViewAllCustomersPolicy)]
        public IActionResult UpdateSavedForm(SavedFormViewModel model)
        {
            var id = formService.UpdateSavedForm(model);

            return Ok(id);
        }



        // GET: api/forms
        //[HttpPost("Addformattributevaluesingle")]
        ////[Authorize(Authorization.Policies.ViewAllCustomersPolicy)]
        //public IActionResult AddFormAttributeValue(FormAttributeValueViewModel model)
        //{
        //    var id = formService.InsertFormAttributeValue(model);
        //    return Ok(id);
        //}

        // GET: api/forms
        [HttpPost("Addformattributevalue")]
        //[Authorize(Authorization.Policies.ViewAllCustomersPolicy)]
        public IActionResult AddFormAttributeValues(List<FormAttributeValueViewModel> model)
        {
            var status = formService.InsertFormAttributeValues(model);
            return Ok(status);
        }

        // GET: api/forms
        //[HttpPost("UpdateformattributevalueSingle")]
        ////[Authorize(Authorization.Policies.ViewAllCustomersPolicy)]
        //public IActionResult Updateformattributevalue(FormAttributeValueViewModel model)
        //{
        //    var id = formService.UpdateFormAttributeValue(model);
        //    return Ok(id);
        //}
        // GET: api/forms
        [HttpPost("Updateformattributevalue")]
        //[Authorize(Authorization.Policies.ViewAllCustomersPolicy)]
        public IActionResult UpdateFormAttributevalues(List<FormAttributeValueViewModel> model)
        {
            var status = formService.UpdateFormAttributeValues(model);
            return Ok(status);
        }

        // GET: api/form/templates
        [HttpGet("templates")]
        // [Authorize(Authorization.Policies.ViewAllUsersPolicy)]


        public IActionResult GetTemplates()
        {

            var all = formService.GetAllTemplates();
            return Ok(all);
        }


        [HttpGet("totalrecords")]
        //[Authorize(Authorization.Policies.ViewAllUsersPolicy)]
        public IActionResult GetTotal([FromQuery] Int32 TemplateID, Int32 PageSize, string SearchStr)
        {

            var AuthID = Request.Headers["AuthID"];
            var AuthPwd = Request.Headers["AuthPwd"];

            var all = formService.GetTotal(TemplateID, PageSize, SearchStr);

            return Ok(all);
        }

  

 
   


    }
}